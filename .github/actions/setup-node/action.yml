name: 'Setup Node.js'
description: 'Setup Node and install dependencies using cache'
inputs:
  save-cache:
    description: 'Save cache when needed'
    required: false
    default: 'false'

runs:
  using: 'composite'

  steps:
    - name: ‚öôÔ∏è Calculate `CACHE_KEY`
      shell: bash
      run: |
        echo 'CACHE_KEY=node_modules-${{
          hashFiles('.node-version', 'pnpm-lock.yaml')
        }}' >> "$GITHUB_ENV"

    - name: ‚ôªÔ∏è Restore `node_modules`
      uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      id: node-modules-restore
      with:
        path: node_modules
        key: ${{ env.CACHE_KEY }}
        enableCrossOsArchive: true

    - name: Calculate `CACHE_HIT`
      shell: bash
      run: |
        echo 'CACHE_HIT=${{
          (steps.node-modules-restore.outputs.cache-hit == 'true') && 'true' || ''
        }}' >> "$GITHUB_ENV"

    - name: ‚öôÔ∏è Setup pnpm
      uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      with:
        standalone: true

    - name: ‚öôÔ∏è Setup Node.js ${{ inputs.node-version }}
      uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
      with:
        node-version-file: .node-version
        cache: ${{ env.CACHE_HIT != 'true' && 'pnpm' || '' }}

    - name: üì• Install dependencies
      if: env.CACHE_HIT != 'true'
      shell: bash
      run: pnpm install --frozen-lockfile
      env:
        # Other environment variables
        HUSKY: '0' # By default do not run HUSKY install

    - name: ‚ôªÔ∏è Write `node_modules` cache
      if: inputs.save-cache == 'true' && env.CACHE_HIT != 'true'
      uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        path: node_modules
        key: ${{ env.CACHE_KEY }}
        enableCrossOsArchive: true
